public class Solution {
    public int gcd(int X,int Y)
    {
        
        if(X==0)
        return Y;
        return gcd(Y%X,X);
    }
    public int solve(ArrayList<Integer> A) {
        int n=A.size();

        //Using prefix and suffix GCD Array

        //Prefix gdc Array
        ArrayList<Integer> pg=new ArrayList<>();
        pg.add(A.get(0));
        for(int i=1;i<n;i++)
        pg.add(gcd(Math.min(pg.get(i-1),A.get(i)),Math.max(pg.get(i-1),A.get(i))));

        //Suffix gcd Array 
        ArrayList<Integer> sg=new ArrayList<>();
        sg.add(A.get(n-1));
        for(int i=1;i<n;i++)
        sg.add(gcd(Math.min(A.get(n-1-i),sg.get(i-1)),Math.max(A.get(n-1-i),sg.get(i-1))));
        Collections.reverse(sg);

        //Maximum GCD while deleting single element from Array
        int max=0;
        for(int i=0;i<n;i++)
        {
            if(i==0 && n!=1)
            max=Math.max(max,sg.get(i+1));
            else if(i==n-1 && n!=1)
            max=Math.max(max,pg.get(i-1));
            else
            max=Math.max(max,gcd(pg.get(i-1),sg.get(i+1)));
        }

        return max;
    }
}
