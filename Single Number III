public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A) {
        int n=A.size();
        int x=0;

        for(int i=0;i<n;i++)
        {
            x^=A.get(i);
        }

        //In the combined XOR, the bits are same in the two number where x[i] is 0
        //Bits are different for bits that are 1
        //Find any bit that is different in two numbers
        //Group the integers into two, with ith bit "on" and "off"

        //Findin the first set bit's index
        int ind=0;
        int ii=0;

        while(x!=0)
        {
            if((x&1)!=0)
            {
                ind=ii;
                break;
            }
            ii++;
            x=x>>1;
        }
        //Grouping the elements in the array to "set" and "unset" at i
        int xa=0;
        int xb=0;
        for(int e:A)
        {
            if((e&(1<<ind))==0)
            xa^=e;
            else
            xb^=e;
        }

        //Returning a list with both index
        ArrayList<Integer> ans=new ArrayList<>();
        ans.add(Math.min(xa,xb));
        ans.add(Math.max(xa,xb));

        return ans;
    }
} 
